#include "fryingSecret.h"
#include <jni.h>
#include <string>

typedef unsigned char BYTE;
BYTE appSign[] = {48, 130, 2, 195, 48, 130, 1, 171, 160, 3, 2, 1, 2, 2, 4, 52, 42, 60, 20, 48, 13,
                  6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 11, 5, 0, 48, 17, 49, 15, 48, 13, 6, 3, 85,
                  4, 3, 19, 6, 102, 114, 121, 105, 110, 103, 48, 32, 23, 13, 49, 57, 48, 55, 50, 55,
                  48, 53, 49, 54, 51, 53, 90, 24, 15, 50, 50, 54, 57, 48, 53, 50, 55, 48, 53, 49,
                  54, 51, 53, 90, 48, 17, 49, 15, 48, 13, 6, 3, 85, 4, 3, 19, 6, 102, 114, 121, 105,
                  110, 103, 48, 130, 1, 34, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 1, 5, 0,
                  3, 130, 1, 15, 0, 48, 130, 1, 10, 2, 130, 1, 1, 0, 165, 55, 164, 180, 169, 14,
                  135, 16, 212, 41, 90, 185, 33, 254, 84, 2, 16, 113, 178, 23, 51, 8, 217, 13, 214,
                  32, 144, 225, 217, 209, 26, 82, 23, 158, 142, 152, 90, 228, 252, 71, 38, 192, 5,
                  159, 153, 156, 249, 249, 255, 184, 223, 188, 28, 242, 238, 153, 211, 243, 70, 140,
                  41, 20, 127, 196, 251, 190, 104, 3, 9, 244, 69, 217, 9, 206, 51, 166, 198, 217,
                  155, 142, 198, 9, 26, 171, 83, 239, 216, 217, 234, 2, 0, 190, 101, 74, 26, 67, 9,
                  97, 0, 128, 238, 212, 10, 97, 117, 169, 250, 54, 47, 58, 239, 195, 99, 108, 188,
                  162, 188, 115, 248, 37, 61, 190, 230, 55, 123, 169, 189, 202, 190, 52, 249, 184,
                  207, 185, 46, 217, 134, 238, 28, 76, 10, 225, 36, 84, 24, 231, 47, 160, 156, 25,
                  221, 170, 105, 17, 61, 131, 209, 184, 35, 149, 86, 174, 7, 31, 11, 241, 133, 26,
                  200, 33, 183, 191, 183, 128, 38, 75, 128, 54, 141, 185, 131, 62, 28, 145, 210,
                  210, 49, 66, 33, 124, 180, 45, 27, 166, 159, 162, 108, 95, 102, 180, 210, 94, 250,
                  10, 170, 176, 43, 119, 15, 46, 167, 175, 247, 145, 30, 248, 104, 111, 73, 110,
                  126, 214, 239, 144, 52, 51, 61, 130, 90, 154, 249, 125, 145, 0, 113, 137, 162,
                  139, 39, 158, 104, 201, 20, 36, 200, 155, 126, 60, 49, 145, 29, 145, 192, 106,
                  207, 123, 2, 3, 1, 0, 1, 163, 33, 48, 31, 48, 29, 6, 3, 85, 29, 14, 4, 22, 4, 20,
                  126, 81, 16, 153, 190, 29, 217, 1, 42, 245, 174, 228, 44, 127, 125, 247, 45, 181,
                  162, 17, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 11, 5, 0, 3, 130, 1, 1, 0,
                  64, 77, 103, 252, 20, 204, 171, 171, 164, 195, 161, 70, 207, 96, 141, 142, 20,
                  117, 94, 91, 198, 4, 252, 103, 83, 29, 105, 239, 24, 57, 212, 234, 244, 221, 234,
                  62, 213, 166, 149, 79, 10, 252, 124, 126, 97, 150, 167, 223, 37, 22, 181, 88, 24,
                  16, 87, 250, 186, 37, 169, 66, 172, 17, 149, 44, 59, 245, 108, 133, 249, 188, 28,
                  77, 73, 44, 62, 21, 84, 157, 176, 106, 142, 172, 65, 190, 3, 199, 233, 221, 110,
                  66, 87, 127, 64, 43, 177, 251, 182, 216, 150, 49, 109, 81, 91, 120, 209, 184, 237,
                  193, 107, 203, 150, 161, 53, 71, 44, 8, 106, 101, 134, 81, 31, 213, 159, 4, 198,
                  118, 167, 126, 139, 204, 139, 66, 181, 25, 86, 248, 151, 184, 206, 176, 23, 175,
                  62, 149, 234, 42, 240, 178, 182, 51, 169, 18, 23, 144, 195, 27, 131, 121, 72, 175,
                  118, 21, 244, 179, 215, 181, 137, 149, 109, 56, 182, 145, 0, 68, 99, 226, 116, 48,
                  54, 170, 11, 172, 132, 65, 241, 207, 123, 166, 21, 165, 21, 39, 32, 48, 84, 225,
                  165, 33, 126, 65, 46, 35, 206, 86, 77, 112, 161, 19, 134, 193, 45, 147, 199, 215,
                  236, 111, 197, 207, 80, 106, 58, 140, 78, 150, 124, 13, 63, 109, 72, 30, 231, 244,
                  172, 82, 173, 38, 120, 170, 36, 63, 92, 39, 177, 7, 172, 31, 226, 147, 215, 1,
                  118, 82, 6, 233, 236, 145};

jbyteArray getResultBytes(JNIEnv *env, BYTE bytes[], int arrayLength) {
    jbyteArray array = env->NewByteArray(arrayLength);
    env->SetByteArrayRegion(array, 0, arrayLength, (jbyte *) bytes);
    return array;
}

extern "C"
JNIEXPORT jbyteArray JNICALL
Java_com_black_base_util_SecretUtil_getCertificate(JNIEnv *env, jobject, jstring key_) {
    const char *key = env->GetStringUTFChars(key_, 0);
    if (!strncmp(key, "sign", strlen("sign"))) {
        int arrayLength = sizeof(appSign) / sizeof(BYTE);
        return getResultBytes(env, appSign, arrayLength);
    }
    env->ReleaseStringUTFChars(key_, key);
    return nullptr;
}